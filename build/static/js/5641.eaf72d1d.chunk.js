"use strict";(self.webpackChunkmy_rsk_wallet_app=self.webpackChunkmy_rsk_wallet_app||[]).push([[5641],{98059:(t,e,n)=>{n.d(e,{W:()=>o});var s=n(19064),i=n(13240);class o extends i.A{constructor(t){let{chains:e=s.k9b,options:n}=t;super(),this.chains=e,this.options=n}getBlockExplorerUrls(t){var e,n;const s=null!==(e=null===(n=t.explorers)||void 0===n?void 0:n.map((t=>t.url)))&&void 0!==e?e:[];return s.length>0?s:void 0}isChainUnsupported(t){return!this.chains.some((e=>e.chainId===t))}updateChains(t){this.chains=t}}},68963:(t,e,n)=>{n.d(e,{A:()=>r,C:()=>c,R:()=>h,S:()=>d,U:()=>u,a:()=>a});var s=n(80750);class i extends Error{constructor(t,e){const{cause:n,code:s,data:i}=e;if(!Number.isInteger(s))throw new Error('"code" must be an integer.');if(!t||"string"!==typeof t)throw new Error('"message" must be a nonempty string.');super("".concat(t,". Cause: ").concat(JSON.stringify(n))),this.cause=n,this.code=s,this.data=i}}class o extends i{constructor(t,e){const{cause:n,code:s,data:i}=e;if(!(Number.isInteger(s)&&s>=1e3&&s<=4999))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(t,{cause:n,code:s,data:i})}}class r extends Error{constructor(){super(...arguments),(0,s._)(this,"name","AddChainError"),(0,s._)(this,"message","Error adding chain")}}class c extends Error{constructor(t){let{chainId:e,connectorId:n}=t;super('Chain "'.concat(e,'" not configured for connector "').concat(n,'".')),(0,s._)(this,"name","ChainNotConfigured")}}class a extends Error{constructor(){super(...arguments),(0,s._)(this,"name","ConnectorNotFoundError"),(0,s._)(this,"message","Connector not found")}}class h extends i{constructor(t){super("Resource unavailable",{cause:t,code:-32002}),(0,s._)(this,"name","ResourceUnavailable")}}class d extends o{constructor(t){super("Error switching chain",{cause:t,code:4902}),(0,s._)(this,"name","SwitchChainError")}}class u extends o{constructor(t){super("User rejected request",{cause:t,code:4001}),(0,s._)(this,"name","UserRejectedRequestError")}}},23939:(t,e,n)=>{function s(t){return"string"===typeof t?Number.parseInt(t,"0x"===t.trim().substring(0,2)?16:10):"bigint"===typeof t?Number(t):t}n.d(e,{n:()=>s})},55641:(t,e,n)=>{n.d(e,{BloctoConnector:()=>p});var s=n(80750),i=n(98059),o=n(68963),r=n(21124),c=n(39917),a=n(26927),h=n(51776),d=n(23489),u=n(76093),l=n(23939);n(13240);class p extends i.W{constructor(t){let{chains:e,options:n={}}=t;super({chains:e,options:n}),(0,s._)(this,"id",d.w.blocto),(0,s._)(this,"name","Blocto"),(0,s._)(this,"ready",!0),this._onAccountsChangedBind=this.onAccountsChanged.bind(this),this._onChainChangedBind=this.onChainChanged.bind(this),this._onDisconnectBind=this.onDisconnect.bind(this)}async connect(t){try{const e=await this.getProvider(t);this.setupListeners(),this.emit("message",{type:"connecting"});const n=await e.request({method:"eth_requestAccounts"}),s=c.getAddress(n[0]),i=await this.getChainId();return{account:s,chain:{id:i,unsupported:this.isChainUnsupported(i)},provider:e}}catch(e){if(this._handleConnectReset(),this._isUserRejectedRequestError(e))throw new o.U(e);throw e}}async disconnect(){const t=await this.getProvider();await t.request({method:"wallet_disconnect"}),this.removeListeners(),this._handleConnectReset()}async getAccount(){const t=await this.getProvider(),e=await t.request({method:"eth_accounts"}),[n]=e||[];if(!n)throw new Error("No accounts found");return n}async getChainId(){const t=await this.getProvider(),e=await t.request({method:"eth_chainId"});return(0,l.n)(e)}getProvider(){let{chainId:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!this._provider){var e,n,s,i;const o=null!==(e=null!==t&&void 0!==t?t:null===(n=this.chains[0])||void 0===n?void 0:n.chainId)&&void 0!==e?e:1,c=null===(s=this.chains.find((t=>t.chainId===o)))||void 0===s?void 0:s.rpc[0];this._provider=null===(i=new r.A({ethereum:{chainId:o,rpc:c},appId:this.options.appId}))||void 0===i?void 0:i.ethereum}if(!this._provider)throw new o.a;return Promise.resolve(this._provider)}async getSigner(){let{chainId:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const[e,n]=await Promise.all([this.getProvider(),this.getAccount()]);return new a.j(e,t).getSigner(n)}async isAuthorized(){var t,e;return null!==(t=!(null===(e=this._provider)||void 0===e||null===(e=e._blocto)||void 0===e||!e.sessionKeyEnv))&&void 0!==t&&t}async switchChain(t){const e=await this.getProvider(),n=h.hexValue(t),s=this.chains.find((e=>e.chainId===t));if(!s)throw new o.S(new Error("chain not found on connector."));if(!(await e.supportChainList())["".concat(t)])throw new o.S(new Error("Blocto unsupported chain: ".concat(n)));try{return await e.request({method:"wallet_addEthereumChain",params:[{chainId:n,rpcUrls:(0,u.g)(s)}]}),await e.request({method:"wallet_switchEthereumChain",params:[{chainId:n}]}),s}catch(i){if(this._isUserRejectedRequestError(i))throw new o.U(i);throw new o.S(i)}}onAccountsChanged(){}async onChainChanged(t){const e=(0,l.n)(t),n=this.isChainUnsupported(e),s=await this.getAccount();this.emit("change",{chain:{id:e,unsupported:n},account:s})}onDisconnect(){this.emit("disconnect")}async setupListeners(){const t=await this.getProvider();t.on("accountsChanged",this._onAccountsChangedBind),t.on("chainChanged",this._onChainChangedBind),t.on("disconnect",this._onDisconnectBind)}async removeListeners(){const t=await this.getProvider();t.off("accountsChanged",this._onAccountsChangedBind),t.off("chainChanged",this._onChainChangedBind),t.off("disconnect",this._onDisconnectBind)}_isUserRejectedRequestError(t){return/(user rejected)/i.test(t.message)}_handleConnectReset(){this._provider=void 0}}}}]);
//# sourceMappingURL=5641.eaf72d1d.chunk.js.map