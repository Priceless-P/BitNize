"use strict";(self.webpackChunkmy_rsk_wallet_app=self.webpackChunkmy_rsk_wallet_app||[]).push([[6109],{23939:(t,s,i)=>{function n(t){return"string"===typeof t?Number.parseInt(t,"0x"===t.trim().substring(0,2)?16:10):"bigint"===typeof t?Number(t):t}i.d(s,{n:()=>n})},36109:(t,s,i)=>{i.d(s,{LocalWalletConnector:()=>g});var n=i(80750),e=i(23939),r=i(37431),a=i(78800),o=i(38285),c=i(10872),h=i(46494);i(13240);class d extends c.Signer{constructor(t){super(),this.signer=t,(0,h.defineReadOnly)(this,"provider",t.provider)}async getAddress(){return await this.signer.getAddress()}async signMessage(t){return await this.signer.signMessage(t)}async signTransaction(t){return await this.signer.signTransaction(t)}connect(t){return new d(this.signer.connect(t))}_signTypedData(t,s,i){return this.signer._signTypedData(t,s,i)}async sendTransaction(t){if(!this.provider)throw new Error("Provider not found");const s={...await(0,a.g)(this.provider),...t};return await this.signer.sendTransaction(s)}}class g extends r.C{constructor(t){super(),(0,n._)(this,"id","local_wallet"),(0,n._)(this,"name","Local Wallet"),(0,n._)(this,"shimDisconnectKey","localWallet.shimDisconnect"),(0,n._)(this,"onChainChanged",(t=>{const s=(0,e.n)(t),i=!this.options.chains.find((t=>t.chainId===s));this.emit("change",{chain:{id:s,unsupported:i}})})),this.options=t}async connect(t){t.chainId&&this.switchChain(t.chainId);const s=await this.getSigner();return await s.getAddress()}async disconnect(){this._provider=void 0,this._signer=void 0}async getAddress(){const t=await this.getSigner();if(!t)throw new Error("No signer found");return await t.getAddress()}async isConnected(){try{return!!await this.getAddress()}catch{return!1}}async getProvider(){return this._provider||(this._provider=(0,o.a_)(this.options.chain,{clientId:this.options.clientId,secretKey:this.options.secretKey})),this._provider}async getSigner(){if(!this._signer){const t=await this.getProvider();this._signer=p(this.options.ethersWallet,t)}return this._signer}async switchChain(t){const s=this.options.chains.find((s=>s.chainId===t));if(!s)throw new Error("Chain not found for chainId ".concat(t,", please add it to the chains property when creating this wallet"));this._provider=(0,o.a_)(s,{clientId:this.options.clientId,secretKey:this.options.secretKey}),this._signer=p(this.options.ethersWallet,this._provider),this.onChainChanged(t)}async setupListeners(){}updateChains(t){this.options.chains=t}}function p(t,s){let i=t;return s&&(i=t.connect(s)),new d(i)}}}]);
//# sourceMappingURL=6109.565bce41.chunk.js.map